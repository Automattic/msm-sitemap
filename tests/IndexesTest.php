<?php
/**
 * WP_Test_Sitemap_Index
 *
 * @package Metro_Sitemap/unit_tests
 */

namespace Automattic\MSM_Sitemap\Tests;

use Metro_Sitemap;

/**
 * Unit Tests to validate indexes are properly generated by Metro_Sitemap
 *
 * @author bcampeau
 */
class IndexesTest extends TestCase {

	/**
	 * Create posts across a number of years
	 *
	 * @var int
	 */
	private int $num_years_data = 3;

	/**
	 * Generate posts and build initial sitemaps
	 */
	public function setup(): void {
		// Add a post for each day in the last x years.
		$dates = array();
		$date = time();
		for ( $i = 0; $i < $this->num_years_data; $i++ ) {
			// Add a post for x years ago.
			$dates[] = date( 'Y', $date ) . '-' . date( 'm', $date ) . '-' . date( 'd', $date ) . ' 00:00:00';
			$date = strtotime( '-1 year', $date );
		}

		$this->create_dummy_posts( $dates );

		$this->assertCount( $this->num_years_data, $this->posts );
		$this->build_sitemaps();
	}

	/**
	 * Remove created posts, sitemaps and options
	 */
	public function teardown(): void {
		$this->posts = array();
		$sitemaps = get_posts( array(
			'post_type' => Metro_Sitemap::SITEMAP_CPT,
			'fields' => 'ids',
			'posts_per_page' => -1,
		) );
		update_option( 'msm_sitemap_indexed_url_count' , 0 );
		array_map( 'wp_delete_post', array_merge( $this->posts_created, $sitemaps ) );
	}

	/**
	 * Test that robots.txt has a single sitemap index when sitemaps by year are disabled
	 */
	public function test_single_sitemap_index(): void
	{
		// Turn on indexing by year
		Metro_Sitemap::$index_by_year = false;

		// Check that we have a single instance of sitemap.xml in robots.txt
		// We can't actually use the core function since it outputs headers,
		// but we only care about our stuff output to a public blog.
		preg_match_all( '|sitemap\.xml|', apply_filters( 'robots_txt', '', true ), $matches );

		// Check that we've indexed the proper total number of URLs.
		$this->assertCount(1, $matches[0]);
	}

	/**
	 * Test that robots.txt has sitemap indexes for all years when sitemaps by year are enabled
	 */
	public function test_sitemap_index_by_year(): void
	{
		// Turn on indexing by year
		Metro_Sitemap::$index_by_year = true;

		// Check that we have a single instance of sitemap.xml in robots.txt
		// We can't actually use the core function since it outputs headers,
		// but we only care about our stuff output to a public blog.
		preg_match_all( '|sitemap-(\d{4})\.xml|', apply_filters( 'robots_txt', '', true ), $matches );

		// Check that we've indexed the proper total number of URLs.
		$this->assertCount(3, $matches[0]);
	}
}

